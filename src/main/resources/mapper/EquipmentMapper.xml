<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeffrey.lab.mapper.EquipmentMapper">
  <resultMap id="BaseResultMap" type="com.jeffrey.lab.domain.Equipment">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <id column="equ_id" jdbcType="VARCHAR" property="equId" />
    <result column="equ_name" jdbcType="VARCHAR" property="equName" />
    <result column="func" jdbcType="VARCHAR" property="func" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="lab_name" jdbcType="VARCHAR" property="labName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="types" jdbcType="VARCHAR" property="types" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `uid`, equ_id, equ_name, func, description, price, start_time, `status`, lab_name, 
    create_time, update_time, is_deleted, types
  </sql>
  <select id="selectByExample" parameterType="com.jeffrey.lab.domain.EquipmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from equipment
    where `uid` = #{uid,jdbcType=BIGINT}
      and equ_id = #{equId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from equipment
    where `uid` = #{uid,jdbcType=BIGINT}
      and equ_id = #{equId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jeffrey.lab.domain.EquipmentExample">
    delete from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jeffrey.lab.domain.Equipment">
    insert into equipment (`uid`, equ_id, equ_name, 
      func, description, price, 
      start_time, `status`, lab_name, 
      create_time, update_time, is_deleted, 
      types)
    values (#{uid,jdbcType=BIGINT}, #{equId,jdbcType=VARCHAR}, #{equName,jdbcType=VARCHAR}, 
      #{func,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{labName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=TINYINT}, 
      #{types,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jeffrey.lab.domain.Equipment">
    insert into equipment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="equId != null">
        equ_id,
      </if>
      <if test="equName != null">
        equ_name,
      </if>
      <if test="func != null">
        func,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="labName != null">
        lab_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="types != null">
        types,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="equId != null">
        #{equId,jdbcType=VARCHAR},
      </if>
      <if test="equName != null">
        #{equName,jdbcType=VARCHAR},
      </if>
      <if test="func != null">
        #{func,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="labName != null">
        #{labName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="types != null">
        #{types,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jeffrey.lab.domain.EquipmentExample" resultType="java.lang.Long">
    select count(*) from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update equipment
    <set>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.equId != null">
        equ_id = #{record.equId,jdbcType=VARCHAR},
      </if>
      <if test="record.equName != null">
        equ_name = #{record.equName,jdbcType=VARCHAR},
      </if>
      <if test="record.func != null">
        func = #{record.func,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.labName != null">
        lab_name = #{record.labName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.types != null">
        types = #{record.types,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update equipment
    set `uid` = #{record.uid,jdbcType=BIGINT},
      equ_id = #{record.equId,jdbcType=VARCHAR},
      equ_name = #{record.equName,jdbcType=VARCHAR},
      func = #{record.func,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=TINYINT},
      lab_name = #{record.labName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      types = #{record.types,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jeffrey.lab.domain.Equipment">
    update equipment
    <set>
      <if test="equName != null">
        equ_name = #{equName,jdbcType=VARCHAR},
      </if>
      <if test="func != null">
        func = #{func,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="labName != null">
        lab_name = #{labName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="types != null">
        types = #{types,jdbcType=VARCHAR},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=BIGINT}
      and equ_id = #{equId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jeffrey.lab.domain.Equipment">
    update equipment
    set equ_name = #{equName,jdbcType=VARCHAR},
      func = #{func,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=TINYINT},
      lab_name = #{labName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      types = #{types,jdbcType=VARCHAR}
    where `uid` = #{uid,jdbcType=BIGINT}
      and equ_id = #{equId,jdbcType=VARCHAR}
  </update>
</mapper>